Parameters:

  EnvironmentName: 
    Description: Name for the Environment 
    Type: String 

  VpcCIDR: 
    Description: CIDR Block of the vpc network 
    Type: String
    Default: 10.0.0.0/16

  PublicSubnetCIDR1:  
    Description: Public Subnet1 CIDR block
    Type: String
    Default: 10.0.1.0/24

  PublicSubnetCIDR2:  
    Description: Public Subnet2 CIDR block
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnetCIDR1:  
    Description: Private Subnet1 CIDR block
    Type: String
    Default: 10.0.3.0/24

  PrivateSubnetCIDR2:  
    Description: Private Subnet2 CIDR block
    Type: String
    Default: 10.0.4.0/24



Resources:

    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: !Ref VpcCIDR
        EnableDnsSupport: 'true'
        EnableDnsHostnames: 'true'
        Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}-VPCID'

    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}-IGW'
  
    InternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref VPC
        InternetGatewayId: !Ref InternetGateway

    PublicSubnet1:
      Type: AWS::EC2::Subnet
      Properties: 
        AvailabilityZone: !Select [0, !GetAZs ""]
        VpcId: !Ref VPC
        CidrBlock: !Ref PublicSubnetCIDR1
        MapPublicIpOnLaunch: true
        Tags: 
          - Key: Name
            Value: !Sub '${EnvironmentName}-PUB-SN1'

    PublicSubnet2:
      Type: AWS::EC2::Subnet
      Properties: 
        AvailabilityZone: !Select [1, !GetAZs ""]
        VpcId: !Ref VPC
        CidrBlock: !Ref PublicSubnetCIDR2
        MapPublicIpOnLaunch: true
        Tags: 
          - Key: Name
            Value: !Sub '${EnvironmentName}-PUB-SN2'

    PrivateSubnet1:
      Type: AWS::EC2::Subnet
      Properties: 
        AvailabilityZone: !Select [0, !GetAZs ""]
        VpcId: !Ref VPC
        CidrBlock: !Ref PrivateSubnetCIDR1
        MapPublicIpOnLaunch: true
        Tags: 
          - Key: Name
            Value: !Sub '${EnvironmentName}-PRIV-SN1'

    PrivateSubnet2:
      Type: AWS::EC2::Subnet
      Properties: 
        AvailabilityZone: !Select [1, !GetAZs ""]
        VpcId: !Ref VPC
        CidrBlock: !Ref PrivateSubnetCIDR2
        MapPublicIpOnLaunch: true
        Tags: 
          - Key: Name
            Value: !Sub '${EnvironmentName}-PRIV-SN2'
    
    NatGateway1:
      Type: AWS::EC2::NatGateway
      Properties:
          AllocationId: !GetAtt NatGatewayEIP1.AllocationId
          SubnetId: !Ref PublicSubnet1
          Tags:
          - Key: Name
            Value: !Sub '${EnvironmentName}-NGW-PUB-SN1'

    NatGatewayEIP1:
      Type: AWS::EC2::EIP
      Properties:
          Domain: VPC

    NatGateway2:
      Type: AWS::EC2::NatGateway
      Properties:
          AllocationId: !GetAtt NatGatewayEIP2.AllocationId
          SubnetId: !Ref PublicSubnet2
          Tags:
          - Key: Name
            Value: !Sub '${EnvironmentName}-NGW-PUB-SN2'

    NatGatewayEIP2:
      Type: AWS::EC2::EIP
      Properties:
          Domain: VPC

    PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}-PUB-RT'

    PublicRoute:
      Type: AWS::EC2::Route
      DependsOn: InternetGatewayAttachment
      Properties:
        RouteTableId: !Ref PublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref InternetGateway

    PublicSubnetRouteTableAssociation1:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref PublicSubnet1
        RouteTableId: !Ref PublicRouteTable

    PublicSubnetRouteTableAssociation2:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref PublicSubnet2
        RouteTableId: !Ref PublicRouteTable

    PrivateRouteTable1:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}-PRIV-RT1'
    
    PrivateRouteTable2:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName}-PRIV-RT2'

    PrivateRoute1:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PrivateRouteTable1
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGateway1

    PrivateRoute2:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PrivateRouteTable2
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGateway2

    PrivateSubnetRouteTableAssociation1:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref PrivateSubnet1
        RouteTableId: !Ref PrivateRouteTable1

    PrivateSubnetRouteTableAssociation2:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref PrivateSubnet2
        RouteTableId: !Ref PrivateRouteTable2

Outputs:

  VPCID:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub '${EnvironmentName}-VPCID'

  PublicSubnet1: 
    Description: Public Subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${EnvironmentName}-PUB-SN1'

  PublicSubnet2: 
    Description: Public Subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${EnvironmentName}-PUB-SN2'

  PublicSubnets: 
    Description: Public Subnets
    Value: !Join [ ',', [ !Ref PublicSubnet1, !Ref PublicSubnet2] ] 
    Export:
      Name: !Sub '${EnvironmentName}-PUB-SN'

  PrivateSubnet1:
    Description: Private Subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${EnvironmentName}-PRIV-SN1'

  PrivateSubnet2:
    Description: Private Subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${EnvironmentName}-PRIV-SN2'

  PrivateSubnets:
    Description: Private Subnets
    Value: !Join [ ',',[ !Ref PrivateSubnet1, !Ref PrivateSubnet2] ] 
    Export:
      Name: !Sub '${EnvironmentName}-PRIV-SN'